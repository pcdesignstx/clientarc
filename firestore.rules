rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isOwner() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'owner';
    }
    
    function isClient() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'client';
    }

    // Global templates collection rules
    match /templates/{templateId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // Activation tokens collection rules
    match /activationTokens/{token} {
      allow read, write: if true;  // Allow public access for activation
    }

    // Workspace rules
    match /workspaces/{workspaceId} {
      allow read: if isAuthenticated() && (
        workspaceId == request.auth.uid || isAdmin()
      );
      allow create: if isAuthenticated() && workspaceId == request.auth.uid;
      allow update: if isAuthenticated() && (
        workspaceId == request.auth.uid || isAdmin()
      );
      allow delete: if isAuthenticated() && isAdmin();
      
      // Workspace subcollections
      match /settings/{document=**} {
        allow read, write: if isAuthenticated() && (
          workspaceId == request.auth.uid || isAdmin()
        );
      }
      
      match /forms/{document=**} {
        allow read, write: if isAuthenticated() && (
          workspaceId == request.auth.uid || isAdmin()
        );
      }
      
      match /content/{document=**} {
        allow read, write: if isAuthenticated() && (
          workspaceId == request.auth.uid || isAdmin()
        );
      }
      
      // Workspace templates subcollection
      match /templates/{document=**} {
        allow read, write: if isAuthenticated() && (
          workspaceId == request.auth.uid || isAdmin()
        );
      }

      // Clients collection rules
      match /clients/{clientId} {
        allow read: if isAuthenticated() && (
          clientId == request.auth.uid || isAdmin()
        );
        allow create: if isAuthenticated() && isAdmin();
        allow update: if isAuthenticated() && isAdmin() && (
          // Allow updating all fields except apiKey
          !request.resource.data.diff(resource.data).affectedKeys().hasAny(['apiKey']) ||
          // Allow updating apiKey only through the regenerateApiKey function
          request.resource.data.apiKey != resource.data.apiKey
        );
        allow delete: if isAuthenticated() && isAdmin();
        
        // Responses subcollection rules
        match /responses/{flowId} {
          allow read: if isAuthenticated() && (
            clientId == request.auth.uid || isAdmin()
          );
          allow write: if isAuthenticated() && (
            clientId == request.auth.uid || isAdmin()
          );
        }
      }
    }

    // User document rules
    match /users/{userId} {
      allow read: if isAuthenticated() && (isAdmin() || userId == request.auth.uid);
      allow create: if isAuthenticated() && isAdmin();
      allow update: if isAuthenticated() && (
        isAdmin() || 
        userId == request.auth.uid
      );
      allow delete: if isAuthenticated() && isAdmin();
      allow list: if isAuthenticated() && isAdmin();
      
      // Settings subcollection rules
      match /settings/{document=**} {
        allow read: if isAuthenticated() && (isOwner() || isAdmin() || isClient());
        allow write: if isAuthenticated() && (isOwner() || isAdmin() || isClient());
      }
      
      // Elements subcollection rules
      match /elements/{document=**} {
        allow read: if isAuthenticated() && (isOwner() || isAdmin() || isClient());
        allow write: if isAuthenticated() && (isOwner() || isAdmin() || isClient());
      }
      
      // Pages subcollection rules
      match /pages/{document=**} {
        allow read: if isAuthenticated() && (isOwner() || isAdmin() || isClient());
        allow write: if isAuthenticated() && (isOwner() || isAdmin() || isClient());
      }
      
      // Blog subcollection rules
      match /blog/{document=**} {
        allow read: if isAuthenticated() && (isOwner() || isAdmin() || isClient());
        allow write: if isAuthenticated() && (isOwner() || isAdmin() || isClient());
      }
      
      // Landing pages subcollection rules
      match /landingPages/{document=**} {
        allow read: if isAuthenticated() && (isOwner() || isAdmin() || isClient());
        allow write: if isAuthenticated() && (isOwner() || isAdmin() || isClient());
      }
    }

    // Requests collection rules
    match /requests/{requestId} {
      allow read: if isAuthenticated() && (
        request.auth.uid == resource.data.clientId || isAdmin()
      );
      allow write: if isAuthenticated() && isAdmin();
      allow list: if isAuthenticated() && isAdmin();
    }

    // Client Requests collection rules
    match /clientRequests/{requestId} {
      allow read: if isAuthenticated() && (
        request.auth.uid == resource.data.clientId || isAdmin()
      );
      allow write: if isAuthenticated() && isAdmin();
      allow list: if isAuthenticated() && isAdmin();
    }

    // Organizations collection rules
    match /organizations/{orgId} {
      allow read, write: if isAdmin();
    }

    // Legacy collections - allow read/write for authenticated users and admins
    match /websiteIdentity/{document=**} {
      allow read, write: if isAuthenticated() && (isAdmin() || isClient());
    }

    match /websiteDesign/{document=**} {
      allow read, write: if isAuthenticated() && (isAdmin() || isClient());
    }

    match /elements/{document=**} {
      allow read, write: if isAuthenticated() && (isAdmin() || isClient());
    }

    match /pages/{document=**} {
      allow read, write: if isAuthenticated() && (isAdmin() || isClient());
    }

    // Legacy root-level documents and collections
    match /home {
      allow read, write: if isAuthenticated() && (isAdmin() || isClient());
    }

    match /about {
      allow read, write: if isAuthenticated() && (isAdmin() || isClient());
    }

    match /services {
      allow read, write: if isAuthenticated() && (isAdmin() || isClient());
    }

    match /contact {
      allow read, write: if isAuthenticated() && (isAdmin() || isClient());
    }

    match /blog {
      allow read, write: if isAuthenticated() && (isAdmin() || isClient());
    }

    match /landingPages {
      allow read, write: if isAuthenticated() && (isAdmin() || isClient());
    }

    // Legacy collections with documents
    match /home/{document=**} {
      allow read, write: if isAuthenticated() && (isAdmin() || isClient());
    }

    match /about/{document=**} {
      allow read, write: if isAuthenticated() && (isAdmin() || isClient());
    }

    match /services/{document=**} {
      allow read, write: if isAuthenticated() && (isAdmin() || isClient());
    }

    match /contact/{document=**} {
      allow read, write: if isAuthenticated() && (isAdmin() || isClient());
    }

    match /blog/{document=**} {
      allow read, write: if isAuthenticated() && (isAdmin() || isClient());
    }

    match /landingPages/{document=**} {
      allow read, write: if isAuthenticated() && (isAdmin() || isClient());
    }

    // Services collection rules
    match /services/{document=**} {
      allow read, write: if isAuthenticated() && (isAdmin() || isClient());
    }

    // Default deny
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 